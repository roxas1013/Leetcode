class Solution {
    int ans;
    int count[];
    public int distributeCookies(int[] cookies, int k) {
        ans = Integer.MAX_VALUE;
        count  = new int [k];
        backtrack(0,cookies,k);
        return ans;
    }
    public void backtrack(int cn, int [] cookies, int k)
    {
        if(cn == cookies.length)
        {
            int max = 0;
            for(int i = 0 ; i < k;i++)
            {
                max = Math.max(max , count[i]);
            }
            ans = Math.min(ans , max);
            return ;
        }
        for(int i = 0; i <k ; i++)
        {
            count[i] += cookies[cn];
            backtrack(cn + 1 , cookies,k);
            count[i] -= cookies[cn];
            if(count[i] == 0)
                break;
        }
    }
}
